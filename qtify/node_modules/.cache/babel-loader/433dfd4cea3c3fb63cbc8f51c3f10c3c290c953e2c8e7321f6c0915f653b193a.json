{"ast":null,"code":"var _jsxFileName = \"D:\\\\github\\\\Qtify-John\\\\qtify\\\\src\\\\Components\\\\Card\\\\Card.jsx\";\nimport React from 'react';\nimport styles from './Card.module.css';\nimport { Chip, Tooltip } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  data,\n  type\n}) => {\n  const getCard = type => {\n    switch (type) {\n      case \"album\":\n        {\n          const {\n            image,\n            follows,\n            title,\n            songs\n          } = data;\n          return /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: `${songs.length} songs`,\n            placement: \"top\",\n            arrow: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.wrapper,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.card,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: image,\n                  alt: \"albumImage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 17,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.banner,\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: `${follows} Follows`,\n                    size: \"small\",\n                    className: styles.chip\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 19,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 18,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.titlewrapper,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 11\n          }, this);\n        }\n      case \"songs\":\n        {\n          const {\n            image,\n            follows,\n            title\n          } = data;\n          return (\n            /*#__PURE__*/\n            // <Tooltip title={`${songs.length} songs` } placement=\"top\" arrow>\n            _jsxDEV(\"div\", {\n              className: styles.wrapper,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.card,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: image,\n                  alt: \"albumImage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.banner,\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: `${follows} Follows`,\n                    size: \"small\",\n                    className: styles.chip\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.titlewrapper,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 13\n            }, this)\n            // </Tooltip>\n          );\n        }\n\n      default:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n  return getCard(type);\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","styles","Chip","Tooltip","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","data","type","getCard","image","follows","title","songs","length","placement","arrow","children","className","wrapper","card","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","banner","label","size","chip","titlewrapper","_c","$RefreshReg$"],"sources":["D:/github/Qtify-John/qtify/src/Components/Card/Card.jsx"],"sourcesContent":["import React from 'react'\r\nimport styles from './Card.module.css'\r\nimport { Chip, Tooltip } from '@mui/material';\r\n\r\n\r\nconst Card = ({ data, type }) => {\r\n \r\n\r\n  const getCard =(type) => {\r\n    switch (type) {\r\n      case \"album\":{\r\n        const { image, follows, title, songs } = data;\r\n        return (\r\n          <Tooltip title={`${songs.length} songs` } placement=\"top\" arrow>\r\n            <div className={styles.wrapper}>\r\n            <div className={styles.card}>\r\n              <img src={image} alt=\"albumImage\" />\r\n              <div className={styles.banner}>\r\n                <Chip label={`${follows} Follows`} size='small' className={styles.chip} />\r\n              </div>\r\n            </div>\r\n            <div className={styles.titlewrapper}>\r\n              <p>{title}</p>\r\n            </div>\r\n          </div>\r\n          </Tooltip>\r\n        )\r\n      }\r\n      case \"songs\":{\r\n        const { image, follows, title } = data;\r\n        return (\r\n          // <Tooltip title={`${songs.length} songs` } placement=\"top\" arrow>\r\n            <div className={styles.wrapper}>\r\n            <div className={styles.card}>\r\n              <img src={image} alt=\"albumImage\" />\r\n              <div className={styles.banner}>\r\n                <Chip label={`${follows} Follows`} size='small' className={styles.chip} />\r\n              </div>\r\n            </div>\r\n            <div className={styles.titlewrapper}>\r\n              <p>{title}</p>\r\n            </div>\r\n          </div>\r\n          // </Tooltip>\r\n        )\r\n      }  \r\n      default: return <></>;\r\n    }\r\n  }\r\n  return (\r\n    getCard (type)\r\n  )\r\n}\r\n\r\nexport default Card;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}